package com.geetion.job138.fragment;

import com.geetion.job138.R;
import com.geetion.job138.activity.PersonalApplyActivity;
import com.geetion.job138.activity.PersonalFavoriteActivity;
import com.geetion.job138.activity.PersonalInviteActivity;
import com.geetion.job138.activity.PersonalLeaveActivity;
import com.geetion.job138.activity.PersonalPasswordActivity;
import com.geetion.job138.activity.PersonalSeemActivity;
import com.geetion.job138.activity.PersonalStatusActivity;
import com.geetion.job138.activity.PersonalTelActivity;
import com.geetion.job138.activity.group.BaseGroupActivity;
import com.geetion.job138.model.ResumeInfo;
import com.geetion.job138.service.PersonInfoSave;
import com.geetion.job138.service.ResumeManageService;
import com.geetion.job138.service.SettingService;
import com.geetion.job138.util.MyHttpException;
import com.geetion.job138.util.UIUtil;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;

public class PersonalCenterFragment extends BaseFragment {
	public static String TAG = PersonalCenterFragment.class.getName();
	private BaseGroupActivity activity;
	private ImageButton registerButton, noChooseButton;
	private int[] buttonIDs = { R.id.resume, R.id.work, R.id.setting };
	private int[] arrowIDs = { R.id.arrow_resume, R.id.arrow_work, R.id.arrow_setting };
	private int[] layoutIDs = { R.id.resume_layout, R.id.work_layout, R.id.setting_layout };
	private RelativeLayout noPicLayout, picLayout;
	private TextView inviteView, applyView, favoriteView, seemView, leaveView, passwordView, telView, statusView, titleView, emailView, topStatusView,
			topTelView;
	private GetMessageTask task;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		return inflater.inflate(R.layout.fragment_personal_center, container, false);
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		activity = (BaseGroupActivity) getActivity();
		init();
		getData();
		super.onActivityCreated(savedInstanceState);
	}

	public void getData() {
		task = new GetMessageTask();
		task.execute();
	}

	public void init() {
		for (int i = 0; i < 3; i++) {
			Button button = (Button) getView().findViewById(buttonIDs[i]);
			button.setOnClickListener(this);
		}
		noPicLayout = (RelativeLayout) getView().findViewById(R.id.no_pic_layout);
		noChooseButton = (ImageButton) getView().findViewById(R.id.choose_photo);
		noChooseButton.setOnClickListener(this);
		picLayout = (RelativeLayout) getView().findViewById(R.id.pic_layout);
		inviteView = (TextView) getView().findViewById(R.id.invite);
		inviteView.setOnClickListener(this);
		applyView = (TextView) getView().findViewById(R.id.apply_record);
		applyView.setOnClickListener(this);
		favoriteView = (TextView) getView().findViewById(R.id.favorite);
		favoriteView.setOnClickListener(this);
		seemView = (TextView) getView().findViewById(R.id.seem);
		seemView.setOnClickListener(this);
		leaveView = (TextView) getView().findViewById(R.id.leave);
		leaveView.setOnClickListener(this);
		passwordView = (TextView) getView().findViewById(R.id.password);
		passwordView.setOnClickListener(this);
		telView = (TextView) getView().findViewById(R.id.tel_status);
		telView.setOnClickListener(this);
		statusView = (TextView) getView().findViewById(R.id.apply_status);
		statusView.setOnClickListener(this);
		titleView = (TextView) getView().findViewById(R.id.title);
		titleView.setText(SettingService.loginMessage.getUserName());
		emailView = (TextView) getView().findViewById(R.id.email);
		topStatusView = (TextView) getView().findViewById(R.id.status);
		topTelView = (TextView) getView().findViewById(R.id.tel);
	}

	@Override
	public void onClick(View v) {
		if (v == registerButton) {
			// activity.changeFragmentAnOnResume(RegisterFragment.TAG, null);
		} else if (v.getId() == buttonIDs[0]) {
			changeLayout(0);
		} else if (v.getId() == buttonIDs[1]) {
			changeLayout(1);
		} else if (v.getId() == buttonIDs[2]) {
			changeLayout(2);
		} else if (v == noChooseButton) {
			noPicLayout.setVisibility(View.GONE);
			picLayout.setVisibility(View.VISIBLE);
		} else if (v == applyView) {
			Intent intent = new Intent(activity, PersonalApplyActivity.class);
			startActivity(intent);
		} else if (v == favoriteView) {
			Intent intent = new Intent(activity, PersonalFavoriteActivity.class);
			startActivity(intent);
		} else if (v == inviteView) {
			Intent intent = new Intent(activity, PersonalInviteActivity.class);
			startActivity(intent);
		} else if (v == seemView) {
			Intent intent = new Intent(activity, PersonalSeemActivity.class);
			startActivity(intent);
		} else if (v == leaveView) {
			Intent intent = new Intent(activity, PersonalLeaveActivity.class);
			startActivity(intent);
		} else if (v == passwordView) {
			Intent intent = new Intent(activity, PersonalPasswordActivity.class);
			startActivity(intent);
		} else if (v == telView) {
			Intent intent = new Intent(activity, PersonalTelActivity.class);
			startActivity(intent);
		} else if (v == statusView) {
			Intent intent = new Intent(activity, PersonalStatusActivity.class);
			startActivity(intent);
		}
	}

	public void changeLayout(int num) {
		for (int i = 0; i < 3; i++) {
			Button button = (Button) getView().findViewById(buttonIDs[i]);
			button.setBackgroundResource(R.drawable.bg_button_main_0);
			View arrow = getView().findViewById(arrowIDs[i]);
			arrow.setVisibility(View.GONE);
			View layout = getView().findViewById(layoutIDs[i]);
			layout.setVisibility(View.GONE);
		}

		Button button = (Button) getView().findViewById(buttonIDs[num]);
		button.setBackgroundResource(R.drawable.bg_button_main_1);
		View arrow = getView().findViewById(arrowIDs[num]);
		arrow.setVisibility(View.VISIBLE);
		View layout = getView().findViewById(layoutIDs[num]);
		layout.setVisibility(View.VISIBLE);
	}

	@Override
	public void onDestroy() {
		if (task != null)
			task.cancel(true);
		super.onDestroy();
	}

	public class GetMessageTask extends AsyncTask<Void, Integer, ResumeInfo> {
		protected void onPreExecute() {
			activity.showLoadiing();
		};

		@Override
		protected ResumeInfo doInBackground(Void... arg0) {
			try {
				Log.e("memberId", PersonInfoSave.memberInfo.getMemberId() + "");
				ResumeInfo contactInfo = ResumeManageService.getContactInfo(PersonInfoSave.resumeInfo.getId());
				contactInfo.setStatus(SettingService.getStatus(PersonInfoSave.memberInfo.getMemberId()));
				return contactInfo;
			} catch (MyHttpException e) {
				Log.e("MyHttpException", e.getErrorCode());
				UIUtil.toast(activity, e.getErrorMessage());
			}
			return null;
		}

		@Override
		protected void onPostExecute(ResumeInfo contactInfo) {
			activity.hideLoading();
			if (contactInfo == null)
				return;
			PersonInfoSave.saveContact(contactInfo);
			PersonInfoSave.resumeInfo.setStatus(contactInfo.getStatus());
			emailView.setText(contactInfo.getEmail());
			topTelView.setText(contactInfo.getMobile());
			topStatusView.setText(PersonInfoSave.resumeInfo.getStatus().split("\\|")[0]);
		}
	}

}

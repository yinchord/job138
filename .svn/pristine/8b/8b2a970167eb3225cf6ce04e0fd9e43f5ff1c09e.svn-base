package com.geetion.job138.adapter;

import java.util.List;

import com.geetion.job138.R;
import com.geetion.job138.model.CityInfo;

import android.content.Context;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.TextView;

public class CityListAdapter extends ArrayAdapter<CityInfo>{
	private LayoutInflater mInflater;
	private int mResource, mItemResource;
	private Context context;
	private List<CityInfo> list;
	private boolean isFather = false;
	private int selectPostion = -1;
	
	public CityListAdapter(Context context, List<CityInfo> list, int mResource, int mItemResource, boolean isFather) {
		super(context, 0, list);
		mInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		this.context = context;
		this.list = list;
		this.mResource = mResource;
		this.mItemResource = mItemResource;
		this.isFather = isFather;
	}
	
	@Override
	public View getView(int position, View convertView, final ViewGroup parent) {
		View layout = convertView;
		if (layout == null) {
			layout = mInflater.inflate(mResource, parent, false);
		}

		CityInfo cityInfo = list.get(position);
		TextView itemText = (TextView) layout.findViewById(mItemResource);
		itemText.setText(cityInfo.getName().replaceAll(" ", ""));
		if (isFather) {
			if (selectPostion != position) {
				itemText.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
				itemText.setTextSize(17);
				itemText.setTextColor(context.getResources().getColor(R.color.white));
				itemText.setBackgroundResource(R.color.select_bg);
				itemText.setCompoundDrawablesWithIntrinsicBounds(0, 0, 0, 0);
			} else {
				itemText.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);
				itemText.setTextSize(17);
				itemText.setTextColor(context.getResources().getColor(R.color.select_font_blue));
				itemText.setBackgroundResource(R.color.select_bg_selected);
				itemText.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.arrow_right, 0);
			}
		} 
		else {
			if (selectPostion != position) {
				itemText.setTextSize(15);
				itemText.setCompoundDrawablesWithIntrinsicBounds(0, 0, 0, 0);
			} else {
				itemText.setTextSize(15);
				itemText.setCompoundDrawablesWithIntrinsicBounds(0, 0, 0, 0);
			}
		}
		return layout;
	}
	
	public void setSelect(int postion) {
		selectPostion = postion;
	}
}

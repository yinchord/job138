package com.geetion.job138.fragment;

import java.util.HashMap;

import cn.sharesdk.onekeyshare.OnekeyShare;

import com.geetion.job138.R;
import com.geetion.job138.activity.BindActivity;
import com.geetion.job138.activity.group.BaseGroupActivity;
import com.geetion.job138.service.CacheService;
import com.geetion.job138.service.PersonInfoSave;
import com.geetion.job138.service.SettingService;
import com.geetion.job138.util.UIUtil;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.TextView;

public class SettingFragment extends BaseFragment {
	public static String TAG = SettingFragment.class.getName();
	private BaseGroupActivity activity;
	private TextView bind, share, logoutView;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		return inflater.inflate(R.layout.fragment_setting, container, false);
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		activity = (BaseGroupActivity) getActivity();
		init();
		super.onActivityCreated(savedInstanceState);
	}

	public void init() {
		bind = (TextView) getView().findViewById(R.id.bind);
		share = (TextView) getView().findViewById(R.id.share);
		logoutView = (TextView) getView().findViewById(R.id.logout);
		bind.setOnClickListener(this);
		share.setOnClickListener(this);
		logoutView.setOnClickListener(this);
	}

	@Override
	public void onClick(View v) {
		if (bind == v) {
			Intent intent = new Intent(getActivity(), BindActivity.class);
			startActivity(intent);
		} else if (share == v) {
			OnekeyShare oks = new OnekeyShare();
			oks.show(getActivity());
		} else if (v == logoutView) {
			UIUtil.confirm(activity, "提  示", "你确定要注销登录 ?", new DialogInterface.OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {
					CacheService.isLogined = false;
					SettingService.cleanLoginMessage(activity);
					PersonInfoSave.clear();
				}
			});
		}
	}
}

package com.geetion.job138.fragment;

import java.util.ArrayList;
import java.util.List;

import com.geetion.job138.R;
import com.geetion.job138.activity.PosListActivity;
import com.geetion.job138.activity.SortActivity;
import com.geetion.job138.activity.group.BaseGroupActivity;
import com.geetion.job138.adapter.SearchListAdapter;
import com.geetion.job138.model.Search;
import com.geetion.job138.util.AndroidUtil;

import android.app.ActionBar.LayoutParams;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnGenericMotionListener;
import android.view.ViewGroup;
import android.view.animation.AnimationUtils;
import android.widget.Adapter;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.PopupWindow;
import android.widget.TextView;

public class SearchFragment extends BaseFragment implements OnClickListener {
	public static String TAG = SearchFragment.class.getName();
	private BaseGroupActivity activity;
	private ImageButton searchButton, closeButton;
	private ArrayAdapter adapter, subAdapter, stationAdapter;
	private ListView listView, stationListView, stationSubListView;
	private View headerView;
	private List<Search> list;
	private TextView searchType, com_selector, pos_selector;
	private EditText station, region;
	private LayoutInflater inflater;
	private PopupWindow selectType, selectStation;
	private List<List<String>> stationsublist;
	private List<String> stationlist;
	private List<String> sublist;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		return inflater.inflate(R.layout.fragment_search, container, false);
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		activity = (BaseGroupActivity) getActivity();
		initView();
		initData();
		super.onActivityCreated(savedInstanceState);
	}

	private void initView() {
		inflater = getActivity().getLayoutInflater();
		headerView = inflater.inflate(R.layout.header_search, null);
		listView = (ListView) getView().findViewById(R.id.listView1);
		listView.addHeaderView(headerView);
		View stationView = inflater.inflate(R.layout.window_station, null);
		View typeView = inflater.inflate(R.layout.window_category, null);
		closeButton = (ImageButton) stationView.findViewById(R.id.button_close);
		com_selector = (TextView) typeView.findViewById(R.id.com_selector);
		pos_selector = (TextView) typeView.findViewById(R.id.pos_selector);
		stationListView = (ListView) stationView
				.findViewById(R.id.list_station);
		stationSubListView = (ListView) stationView
				.findViewById(R.id.list_station_sub);
		searchType = (TextView) typeView.findViewById(R.id.search_type);
		selectType = new PopupWindow(typeView, LayoutParams.WRAP_CONTENT,
				LayoutParams.WRAP_CONTENT);
		selectStation = new PopupWindow(stationView, LayoutParams.MATCH_PARENT,
				LayoutParams.MATCH_PARENT, true);
		selectStation.setOutsideTouchable(true);
		selectStation.setTouchable(true);
		selectStation.update();
		listView.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
					long arg3) {
				Intent intent = new Intent(getActivity(), PosListActivity.class);
				startActivity(intent);
			}
		});
		searchType = (TextView) headerView.findViewById(R.id.type);
		station = (EditText) headerView.findViewById(R.id.station);
		region = (EditText) headerView.findViewById(R.id.regin);
		station.setFocusable(false);
		region.setFocusable(false);
		searchButton = (ImageButton) headerView
				.findViewById(R.id.button_search);
		searchButton.setOnClickListener(this);
		closeButton.setOnClickListener(this);
		searchType.setOnClickListener(this);
		com_selector.setOnClickListener(this);
		pos_selector.setOnClickListener(this);
		station.setOnClickListener(this);
		region.setOnClickListener(this);
	}

	private void initData() {
		list = new ArrayList<Search>();
		list.add(new Search());
		list.add(new Search());
		list.add(new Search());
		stationlist = new ArrayList<String>();
		stationlist.add("美容美体");
		stationlist.add("美发美甲");
		stationlist.add("化妆纹绣");
		stationlist.add("中医保健");
		stationlist.add("销售策划");
		stationsublist = new ArrayList<List<String>>();
		sublist = new ArrayList<String>();
		sublist.add("美容师");
		sublist.add("美体师");
		stationsublist.add(sublist);
		sublist = new ArrayList<String>();
		sublist.add("发型师");
		sublist.add("美甲师");
		stationsublist.add(sublist);
		sublist = new ArrayList<String>();
		sublist.add("化妆师");
		sublist.add("纹绣导师");
		stationsublist.add(sublist);
		sublist = new ArrayList<String>();
		sublist.add("医师");
		sublist.add("保健师");
		stationsublist.add(sublist);
		sublist = new ArrayList<String>();
		sublist.add("销售");
		sublist.add("策划总监");
		stationsublist.add(sublist);
		sublist = new ArrayList<String>();
		sublist.addAll(stationsublist.get(0));
		adapter = new SearchListAdapter(getActivity(), list);
		stationAdapter = new ArrayAdapter<String>(getActivity(),
				R.layout.item_station, stationlist);
		subAdapter = new ArrayAdapter<String>(getActivity(),
				R.layout.item_station2, sublist);
		listView.setAdapter(adapter);
		stationListView.setAdapter(stationAdapter);
		stationSubListView.setAdapter(subAdapter);
		stationListView.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1,
					int position, long arg3) {
				sublist.clear();
				sublist.addAll(stationsublist.get(position));
				subAdapter.notifyDataSetChanged();
				for (int i = 0; i < arg0.getChildCount(); i++) {
					TextView view = (TextView) arg0.getChildAt(i);
					view.setTextColor(getResources().getColor(R.color.white));
					view.setBackgroundResource(R.color.select_bg);
				}
				TextView view = (TextView) arg0.getChildAt(position);
				view.setTextColor(getResources().getColor(
						R.color.select_font_blue));
				view.setBackgroundResource(R.color.select_bg_selected);
				stationSubListView.setVisibility(View.VISIBLE);
			}
		});
		stationSubListView.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1,
					int position, long arg3) {
				station.setText(sublist.get(position));
				selectStation.dismiss();
			}
		});
	}

	@Override
	public void onClick(View v) {
		if (v == searchButton) {
			Intent intent = new Intent(getActivity(), PosListActivity.class);
			startActivity(intent);
		} else if (v == searchType) {
			if (!selectType.isShowing()) {
				selectType.showAsDropDown(searchType);
			} else {
				selectType.dismiss();
			}
		} else if (v == com_selector) {
			searchType.setText(com_selector.getText());
			selectType.dismiss();
		} else if (v == pos_selector) {
			searchType.setText(pos_selector.getText());
			selectType.dismiss();
		} else if (v == station) {
			selectStation.showAtLocation(station, Gravity.RIGHT, 0, 0);
		} else if (v == region) {
			Intent intent = new Intent(getActivity(), SortActivity.class);
			intent.putExtra("data", region.getEditableText().toString());
			startActivityForResult(intent, 0);
		} else if (v == closeButton) {
			selectStation.dismiss();
		}
	}

	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		if (resultCode == Activity.RESULT_OK) {
			region.setText(data.getStringExtra("data"));
		}
	}
}
